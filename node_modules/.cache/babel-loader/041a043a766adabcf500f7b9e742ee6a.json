{"ast":null,"code":"import _slicedToArray from\"/Users/serjehavandjian/Development/code/Phase-3-Project/phase_3_project_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{Route,Switch}from\"react-router-dom\";import Tourists from\"./Tourists\";import NavBar from\"./NavBar\";import Continent from\"./Continent\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),allTourists=_useState2[0],setAllTourists=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),allCountries=_useState4[0],setAllCountries=_useState4[1];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",children:/*#__PURE__*/_jsx(Tourists,{allTourists:allTourists,setAllTourists:setAllTourists,allCountries:allCountries,setAllCountries:setAllCountries})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/Asia\",children:/*#__PURE__*/_jsx(Continent,{continentName:\"asia\"})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/Africa\",children:/*#__PURE__*/_jsx(Continent,{continentName:\"africa\"})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/Europe\",children:/*#__PURE__*/_jsx(Continent,{continentName:\"europe\"})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/Antarctica\",children:/*#__PURE__*/_jsx(Continent,{continentName:\"antarctica\"})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/NorthAmerica\",children:/*#__PURE__*/_jsx(Continent,{continentName:\"north_america\"})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/SouthAmerica\",children:/*#__PURE__*/_jsx(Continent,{continentName:\"south_america\"})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/Australia\",children:/*#__PURE__*/_jsx(Continent,{continentName:\"australia\"})})]})]});}export default App;","map":{"version":3,"names":["React","useState","Route","Switch","Tourists","NavBar","Continent","App","allTourists","setAllTourists","allCountries","setAllCountries"],"sources":["/Users/serjehavandjian/Development/code/Phase-3-Project/phase_3_project_frontend/src/components/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Tourists from \"./Tourists\";\nimport NavBar from \"./NavBar\";\nimport Continent from \"./Continent\";\n\nfunction App() {\n\n    const [ allTourists, setAllTourists ] = useState([]);\n    const [ allCountries, setAllCountries ] = useState([]);\n\n\n  return (\n    <> \n      <NavBar />\n        <Switch>\n          <Route exact path = \"/\">\n              <Tourists allTourists={allTourists} setAllTourists={setAllTourists} allCountries={allCountries} setAllCountries={setAllCountries}/>\n          </Route>\n          <Route exact path = \"/Asia\">\n            <Continent continentName={\"asia\"}/>\n          </Route>\n          <Route exact path = \"/Africa\">\n            <Continent continentName={\"africa\"}/>\n          </Route>\n          <Route exact path = \"/Europe\">\n              <Continent continentName={\"europe\"}/>\n          </Route>\n          <Route exact path = \"/Antarctica\">\n            <Continent continentName={\"antarctica\"}/>\n          </Route>\n          <Route exact path = \"/NorthAmerica\">\n            <Continent continentName={\"north_america\"}/>\n          </Route>\n          <Route exact path = \"/SouthAmerica\">\n            <Continent continentName={\"south_america\"}/>\n          </Route>\n          <Route exact path = \"/Australia\">\n            <Continent continentName={\"australia\"}/>\n          </Route>\n        </Switch>\n    </>\n  );  \n}\n\nexport default App;"],"mappings":"sKAAA,MAAOA,MAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,KAAT,CAAgBC,MAAhB,KAA8B,kBAA9B,CACA,MAAOC,SAAP,KAAqB,YAArB,CACA,MAAOC,OAAP,KAAmB,UAAnB,CACA,MAAOC,UAAP,KAAsB,aAAtB,C,6IAEA,QAASC,IAAT,EAAe,CAEX,cAAwCN,QAAQ,CAAC,EAAD,CAAhD,wCAAQO,WAAR,eAAqBC,cAArB,eACA,eAA0CR,QAAQ,CAAC,EAAD,CAAlD,yCAAQS,YAAR,eAAsBC,eAAtB,eAGF,mBACE,wCACE,KAAC,MAAD,IADF,cAEI,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAG,GAApB,uBACI,KAAC,QAAD,EAAU,WAAW,CAAEH,WAAvB,CAAoC,cAAc,CAAEC,cAApD,CAAoE,YAAY,CAAEC,YAAlF,CAAgG,eAAe,CAAEC,eAAjH,EADJ,EADF,cAIE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAG,OAApB,uBACE,KAAC,SAAD,EAAW,aAAa,CAAE,MAA1B,EADF,EAJF,cAOE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAG,SAApB,uBACE,KAAC,SAAD,EAAW,aAAa,CAAE,QAA1B,EADF,EAPF,cAUE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAG,SAApB,uBACI,KAAC,SAAD,EAAW,aAAa,CAAE,QAA1B,EADJ,EAVF,cAaE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAG,aAApB,uBACE,KAAC,SAAD,EAAW,aAAa,CAAE,YAA1B,EADF,EAbF,cAgBE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAG,eAApB,uBACE,KAAC,SAAD,EAAW,aAAa,CAAE,eAA1B,EADF,EAhBF,cAmBE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAG,eAApB,uBACE,KAAC,SAAD,EAAW,aAAa,CAAE,eAA1B,EADF,EAnBF,cAsBE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAG,YAApB,uBACE,KAAC,SAAD,EAAW,aAAa,CAAE,WAA1B,EADF,EAtBF,GAFJ,GADF,CA+BD,CAED,cAAeJ,IAAf"},"metadata":{},"sourceType":"module"}